// Generated by view binder compiler. Do not edit!
package com.example.habitzen.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.habitzen.R;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHabitsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ExtendedFloatingActionButton addHabitFab;

  @NonNull
  public final TextView completionPercentLabel;

  @NonNull
  public final LinearProgressIndicator completionProgress;

  @NonNull
  public final TextView completionText;

  @NonNull
  public final TextView greetingTextView;

  @NonNull
  public final RecyclerView habitsRecycler;

  private FragmentHabitsBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ExtendedFloatingActionButton addHabitFab, @NonNull TextView completionPercentLabel,
      @NonNull LinearProgressIndicator completionProgress, @NonNull TextView completionText,
      @NonNull TextView greetingTextView, @NonNull RecyclerView habitsRecycler) {
    this.rootView = rootView;
    this.addHabitFab = addHabitFab;
    this.completionPercentLabel = completionPercentLabel;
    this.completionProgress = completionProgress;
    this.completionText = completionText;
    this.greetingTextView = greetingTextView;
    this.habitsRecycler = habitsRecycler;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHabitsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHabitsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_habits, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHabitsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addHabitFab;
      ExtendedFloatingActionButton addHabitFab = ViewBindings.findChildViewById(rootView, id);
      if (addHabitFab == null) {
        break missingId;
      }

      id = R.id.completionPercentLabel;
      TextView completionPercentLabel = ViewBindings.findChildViewById(rootView, id);
      if (completionPercentLabel == null) {
        break missingId;
      }

      id = R.id.completionProgress;
      LinearProgressIndicator completionProgress = ViewBindings.findChildViewById(rootView, id);
      if (completionProgress == null) {
        break missingId;
      }

      id = R.id.completionText;
      TextView completionText = ViewBindings.findChildViewById(rootView, id);
      if (completionText == null) {
        break missingId;
      }

      id = R.id.greeting_text_view;
      TextView greetingTextView = ViewBindings.findChildViewById(rootView, id);
      if (greetingTextView == null) {
        break missingId;
      }

      id = R.id.habitsRecycler;
      RecyclerView habitsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (habitsRecycler == null) {
        break missingId;
      }

      return new FragmentHabitsBinding((CoordinatorLayout) rootView, addHabitFab,
          completionPercentLabel, completionProgress, completionText, greetingTextView,
          habitsRecycler);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
