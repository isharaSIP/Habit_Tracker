// Generated by view binder compiler. Do not edit!
package com.example.habitzen.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.habitzen.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMoodBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final MaterialButton clearMoodsBtn;

  @NonNull
  public final MaterialButton emojiAngry;

  @NonNull
  public final MaterialButton emojiHappy;

  @NonNull
  public final MaterialButton emojiNeutral;

  @NonNull
  public final MaterialButton emojiSad;

  @NonNull
  public final MaterialButton logMoodBtn;

  @NonNull
  public final TextInputEditText moodNote;

  @NonNull
  public final RecyclerView moodsRecycler;

  @NonNull
  public final MaterialButton shareSummaryBtn;

  private FragmentMoodBinding(@NonNull NestedScrollView rootView,
      @NonNull MaterialButton clearMoodsBtn, @NonNull MaterialButton emojiAngry,
      @NonNull MaterialButton emojiHappy, @NonNull MaterialButton emojiNeutral,
      @NonNull MaterialButton emojiSad, @NonNull MaterialButton logMoodBtn,
      @NonNull TextInputEditText moodNote, @NonNull RecyclerView moodsRecycler,
      @NonNull MaterialButton shareSummaryBtn) {
    this.rootView = rootView;
    this.clearMoodsBtn = clearMoodsBtn;
    this.emojiAngry = emojiAngry;
    this.emojiHappy = emojiHappy;
    this.emojiNeutral = emojiNeutral;
    this.emojiSad = emojiSad;
    this.logMoodBtn = logMoodBtn;
    this.moodNote = moodNote;
    this.moodsRecycler = moodsRecycler;
    this.shareSummaryBtn = shareSummaryBtn;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMoodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMoodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_mood, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMoodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clearMoodsBtn;
      MaterialButton clearMoodsBtn = ViewBindings.findChildViewById(rootView, id);
      if (clearMoodsBtn == null) {
        break missingId;
      }

      id = R.id.emojiAngry;
      MaterialButton emojiAngry = ViewBindings.findChildViewById(rootView, id);
      if (emojiAngry == null) {
        break missingId;
      }

      id = R.id.emojiHappy;
      MaterialButton emojiHappy = ViewBindings.findChildViewById(rootView, id);
      if (emojiHappy == null) {
        break missingId;
      }

      id = R.id.emojiNeutral;
      MaterialButton emojiNeutral = ViewBindings.findChildViewById(rootView, id);
      if (emojiNeutral == null) {
        break missingId;
      }

      id = R.id.emojiSad;
      MaterialButton emojiSad = ViewBindings.findChildViewById(rootView, id);
      if (emojiSad == null) {
        break missingId;
      }

      id = R.id.logMoodBtn;
      MaterialButton logMoodBtn = ViewBindings.findChildViewById(rootView, id);
      if (logMoodBtn == null) {
        break missingId;
      }

      id = R.id.moodNote;
      TextInputEditText moodNote = ViewBindings.findChildViewById(rootView, id);
      if (moodNote == null) {
        break missingId;
      }

      id = R.id.moodsRecycler;
      RecyclerView moodsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (moodsRecycler == null) {
        break missingId;
      }

      id = R.id.shareSummaryBtn;
      MaterialButton shareSummaryBtn = ViewBindings.findChildViewById(rootView, id);
      if (shareSummaryBtn == null) {
        break missingId;
      }

      return new FragmentMoodBinding((NestedScrollView) rootView, clearMoodsBtn, emojiAngry,
          emojiHappy, emojiNeutral, emojiSad, logMoodBtn, moodNote, moodsRecycler, shareSummaryBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
